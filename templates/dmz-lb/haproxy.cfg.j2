global
    log         127.0.0.1 local0

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

    # utilize system-wide crypto-policies
    ssl-default-bind-ciphers PROFILE=SYSTEM
    ssl-default-server-ciphers PROFILE=SYSTEM

defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

listen stats
    bind :9000
    mode http
    stats enable
    stats uri /

##
# OpenShift Machine Config
#
listen ocp_mc
    bind *:22623
    mode tcp

    tcp-request inspect-delay 5s
    acl network_allowed src 172.16.17.0/24
    tcp-request connection reject if !network_allowed

    balance leastconn
    server syd-boostrap-01 syd-bootstrap-01.ocp.hahl.au:22623 check
    server syd-master-01   syd-master-01.ocp.hahl.au:22623 check
    server syd-master-02   syd-master-02.ocp.hahl.au:22623 check
    server syd-master-03   syd-master-03.ocp.hahl.au:22623 check

##
# OpenShift  API 6443
#
listen ocp_api
    bind  *:6443
    mode tcp
    server syd-boostrap-01 syd-bootstrap-01.ocp.hahl.au:6443 check
    server syd-master-01   syd-master-01.ocp.hahl.au:6443 check
    server syd-master-02   syd-master-02.ocp.hahl.au:6443 check
    server syd-master-03   syd-master-03.ocp.hahl.au:6443 check

##
# HTTP traffic
#
frontend fe_http
    bind *:80
    mode http

    acl app_cloud         hdr(host) -i cloud.hahl.au 
    acl app_ocp_ingress   hdr(host) -m end .apps.ocp.hahl.au

    redirect scheme https code 301 if app_cloud

    # Default backend to 
    use_backend be_http_ocp_ingress   if app_ocp_ingress 

##
# HTTPS Traffic
#
frontend fe_https
    bind *:443
    mode tcp

    tcp-request inspect-delay 5s
    tcp-request content accept if { req_ssl_hello_type 1 }

    use_backend be_https_cloud        if { req_ssl_sni -i cloud.hahl.au }
    use_backend be_https_ocp_ingress  if { req_ssl_sni -m end .apps.ocp.hahl.au }

##
# cloud.hahl.id.au
#
backend be_https_cloud
    mode tcp
    balance roundrobin
    server syd-cloud-01 syd-cloud-01.apps.hahl.au:443 check
    server syd-cloud-02 syd-cloud-01.apps.hahl.au:443 check backup

##
# *.apps.ocp.hahl.id.au
#
backend be_https_ocp_ingress
    mode tcp
    balance leastconn
    server syd-worker-01 syd-worker-01.ocp.hahl.au:443 check
    server syd-worker-02 syd-worker-02.ocp.hahl.au:443 check
    server syd-worker-03 syd-worker-03.ocp.hahl.au:443 check

backend be_http_ocp_ingress
    mode http
    balance leastconn
    server syd-worker-01 syd-worker-01.ocp.hahl.au:80 check
    server syd-worker-02 syd-worker-02.ocp.hahl.au:80 check
    server syd-worker-03 syd-worker-03.ocp.hahl.au:80 check
