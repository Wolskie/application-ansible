global
    log         127.0.0.1 local0

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

    # utilize system-wide crypto-policies
    ssl-default-bind-ciphers PROFILE=SYSTEM
    ssl-default-server-ciphers PROFILE=SYSTEM

defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

listen stats
    bind :9000
    mode http
    stats enable
    stats uri /

##
# Minecraft
#
frontend fe_minecraft
    bind *:25565
    mode tcp
    default_backend be_minecraft
backend be_minecraft
    mode tcp
    balance roundrobin
    server server1 172.16.17.164:25565 check

##
# Gitea SSH
#
frontend fe_gitea_ssh
    bind *:2222
    mode tcp
    default_backend be_gitea_ssh
backend be_gitea_ssh
    mode tcp
    balance roundrobin
    server syd-worker-01 172.16.17.103:30436 check
    server syd-worker-02 172.16.17.104:30436 check
    server syd-worker-03 172.16.17.105:30436 check


##
# OpenShift Machine Config
#
frontend fe_infra_mc
    bind *:22623
    mode tcp

    tcp-request inspect-delay 5s
    acl network_allowed src 172.16.17.0/24
    tcp-request connection reject if !network_allowed

    default_backend be_infra_mc
backend be_infra_mc
    mode tcp
    balance leastconn
    server bootstrap01 172.16.17.126:22623 check
    server master01    172.16.17.100:22623 check
    server master02    172.16.17.101:22623 check
    server master03    172.16.17.102:22623 check

##
# Kubernetes API 6443
# OpenShift  API 6443
#
frontend fe_k8s_api
    bind *:6443
    mode tcp

    tcp-request inspect-delay 5s
    tcp-request content accept if { req_ssl_hello_type 1 }

    use_backend be_ocp_api    if { req.ssl_sni -m end .ocp.hahl.id.au   }
    use_backend be_infra_api  if { req.ssl_sni -m end .infra.hahl.id.au }

# Infra 6443 Backend
backend be_infra_api
    mode tcp
    server syd-boostrap-01 172.16.17.126:6443 check
    server syd-master-01   172.16.17.100:6443 check
    server syd-master-02   172.16.17.101:6443 check
    server syd-master-03   172.16.17.102:6443 check

# OCP 6443 Backend
backend be_ocp_api
    mode tcp
    server master01 172.16.17.106:6443 check
    server master02 172.16.17.107:6443 check
    server master03 172.16.17.108:6443 check

##
# HTTP traffic
#
frontend fe_http
    bind *:80
    mode http

    acl app_cloud       hdr(host) -i cloud.hahl.id.au 
    acl app_element     hdr(host) -i element.hahl.id.au 
    acl app_matrix      hdr(host) -i matrix.hahl.id.au 
    acl app_auth        hdr(host) -i auth.hahl.id.au
    acl app_gitea       hdr(host) -i git.hahl.id.au


    acl app_infra_ingress hdr(host) -m end .apps.infra.hahl.id.au
    acl app_ocp_ingress   hdr(host) -m end .apps.ocp.hahl.id.au

    # Redirect cloud/auth to https
    redirect scheme https code 301 if app_cloud
    redirect scheme https code 301 if app_auth
    redirect scheme https code 301 if app_element
    redirect scheme https code 301 if app_matrix
    redirect scheme https code 301 if app_gitea

    # Default backend to 
    use_backend be_http_ocp_ingress   if app_ocp_ingress 
    use_backend be_http_infra_ingress if app_infra_ingress 

##
# HTTPS Traffic
#
frontend fe_https
    bind *:443
    mode tcp

    tcp-request inspect-delay 5s
    tcp-request content accept if { req_ssl_hello_type 1 }

    # Cloud
    use_backend be_https_cloud        if { req_ssl_sni -i cloud.hahl.id.au }

    # Matrix and element are the same backend.
    use_backend be_https_matrix       if { req_ssl_sni -i matrix.hahl.id.au }
    use_backend be_https_matrix       if { req_ssl_sni -i element.hahl.id.au }

    # Keycloak / Gitea is on Infra Kubernetes
    use_backend be_https_infra_ingress  if { req_ssl_sni -i auth.hahl.id.au }
    use_backend be_https_infra_ingress  if { req_ssl_sni -i git.hahl.id.au }

    # Default to kubernetes
    use_backend be_https_ocp_ingress    if { req_ssl_sni -m end .apps.ocp.hahl.id.au }
    use_backend be_https_infra_ingress  if { req.ssl_sni -m end .apps.infra.hahl.id.au }

##
# cloud.hahl.id.au
#
backend be_https_cloud
    mode tcp
    balance roundrobin
    server cloud_1 172.16.17.182:443 check send-proxy-v2

##
# * matrix.hahl.id.au
# * element.hahl.id.au
#
backend be_https_matrix
    mode tcp
    balance roundrobin
    server matrix_1 172.16.17.166:443 check

##
# *.apps.infra.hahl.id.au
#
backend be_https_infra_ingress
    mode tcp
    balance leastconn
    server syd-worker-01 172.16.17.103:443 check
    server syd-worker-02 172.16.17.104:443 check
    server syd-worker-03 172.16.17.105:443 check

backend be_http_infra_ingress
    mode http
    balance leastconn
    server syd-worker-01 172.16.17.103:80 check
    server syd-worker-02 172.16.17.104:80 check
    server syd-worker-03 172.16.17.105:80 check

##
# *.apps.ocp.hahl.id.au
#
backend be_https_ocp_ingress
    mode tcp
    balance leastconn
    server worker01 172.16.17.109:443 check
    server worker02 172.16.17.110:443 check
    server worker03 172.16.17.111:443 check

backend be_http_ocp_ingress
    mode http
    balance leastconn
    server worker01 172.16.17.109:80 check
    server worker02 172.16.17.110:80 check
    server worker03 172.16.17.111:80 check
